/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-12-18 05:43:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("  \n");
      out.write("\n");
      out.write("<html>\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("\t<meta charset=\"utf-8\">\n");
      out.write("\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("\t<title>Satsang America - Login</title>\n");
      out.write("    <link rel=\"shortcut icon\" href=\"favicon.ico\" type=\"image/x-icon\">\n");
      out.write("  \n");
      out.write("\t<link href=\"css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("\t<!--<link href=\"css/datepicker3.css\" rel=\"stylesheet\">-->\n");
      out.write("\t<link href=\"css/styles.css\" rel=\"stylesheet\">\n");
      out.write("\t<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js\"></script>\n");
      out.write("\t<script src=\"js/controller.js\"></script>\n");
      out.write("\t<!--[if lt IE 9]>\n");
      out.write("<script src=\"js/html5shiv.js\"></script>\n");
      out.write("<script src=\"js/respond.min.js\"></script>\n");
      out.write("<![endif]-->\n");
      out.write("\n");
      out.write("  <!-- \n");
      out.write("  <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"webapp/images/favicon.ico\" />\n");
      out.write("     -->\n");
      out.write(" </head>\n");

	/*
    response.setHeader("Cache-Control","no-cache");
	response.setHeader("Cache-Control","no-store");
	response.setHeader("Pragma","no-cache");
	response.setDateHeader ("Expires", 0);
    session.setAttribute("userBean",null);
  */

      out.write("\n");
      out.write("<body ng-app=\"onlineSA\">\n");
      out.write("\n");
      out.write("<div ng-controller=\"onlineSAController\">\n");
      out.write("\t<div class=\"row\">\n");
      out.write("\t\t<div class=\"col-xs-10 col-xs-offset-1 col-sm-8 col-sm-offset-2 col-md-4 col-md-offset-4\">\n");
      out.write("\t\t\t<div class=\"login-panel panel panel-default\">\n");
      out.write("\t\t\t\t<div class=\"panel-heading\">Sign in - Satsang America </div>\n");
      out.write("\t\t\t\t<div class=\"panel-body\">\n");
      out.write("                    <div id=\"dvErrAlert\" class=\"alert alert-danger\" style= \"display:none\">\n");
      out.write("\t\t\t\t\t  <a class=\"close\" href=\"#\">Ã—</a>\n");
      out.write("\t\t\t\t\t  <p><strong>{{PostDataResponse}}</strong> \n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<form name=\"loginForm\">\n");
      out.write("\t\t\t\t\t\t<fieldset>\n");
      out.write("                            <div class=\"form-group has-error\">\n");
      out.write("                                <!--<label class=\"control-label\" for=\"txtFamilyCode\">User ID:</label>-->\n");
      out.write("                                 <input class=\"form-control\" placeholder=\"SA Family ID / Phone Number\" id=\"userName\" name=\"userName\" autofocus=\"\" ng-model=\"userName\" required>\n");
      out.write("                            </div>\n");
      out.write("\t\t\t\t\t\t\t<div class=\"form-group\">\n");
      out.write("                                <!--<label class=\"control-label\" for=\"txtFamilyCode\">Password:</label>-->\n");
      out.write("\t\t\t\t\t\t\t\t<input class=\"form-control\" placeholder=\"Password\" name=\"password\" type=\"password\" value=\"\" ng-model=\"password\" required>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t<!-- <div class=\"checkbox\">\n");
      out.write("\t\t\t\t\t\t\t\t<label>\n");
      out.write("\t\t\t\t\t\t\t\t\t<input name=\"remember\" type=\"checkbox\" value=\"Remember Me\"> Remember Me\n");
      out.write("\t\t\t\t\t\t\t\t</label>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t -->\n");
      out.write("\t\t\t\t\t\t\t<input class=\"btn btn-primary\" type=\"submit\" ng-click=\"loginForm.$valid && validateUser($event)\" value=\"Sign In\" />\n");
      out.write("                            <a href=\"register.jsp\" class=\"btn btn-primary pull-right\">Register User</a>\n");
      out.write("                            \n");
      out.write("                              <a style=\"margin-left: 10px;\"  href=\"forgotpswd.jsp\">Forgot Password</a>\n");
      out.write("\t\t\t\t\t\t</fieldset>\n");
      out.write("\t\t\t\t\t</form>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<!-- /.col-->\n");
      out.write("\t</div>\n");
      out.write("\t<!-- /.row -->\n");
      out.write("\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n");
      out.write("\t<script>\n");
      out.write("\t\t!function ($) {\n");
      out.write("\t\t\t$(document).on(\"click\",\"ul.nav li.parent > a > span.icon\", function(){\t\t  \n");
      out.write("\t\t\t\t$(this).find('em:first').toggleClass(\"glyphicon-minus\");\t  \n");
      out.write("\t\t\t}); \n");
      out.write("\t\t\t$(\".sidebar span.icon\").find('em:first').addClass(\"glyphicon-plus\");\n");
      out.write("\t\t}(window.jQuery);\n");
      out.write("\n");
      out.write("\t\t$(window).on('resize', function () {\n");
      out.write("\t\t  if ($(window).width() > 768) $('#sidebar-collapse').collapse('show')\n");
      out.write("\t\t})\n");
      out.write("\t\t$(window).on('resize', function () {\n");
      out.write("\t\t  if ($(window).width() <= 767) $('#sidebar-collapse').collapse('hide')\n");
      out.write("\t\t})\n");
      out.write("\t</script>\n");
      out.write("\t<script>\n");
      out.write("\tfunction formatPhone(userName){\n");
      out.write("\t  var phoneStr = userName.value,\n");
      out.write("\t  s2 = (\"\"+phoneStr).replace(/\\D/g, ''),\n");
      out.write("\t  m = s2.match(/^(\\d{3})?[- ]??[\\s]?(\\d{3})?[\\s]?(\\d{4})?(.*)?$/);\n");
      out.write("\t  phoneObj.value = (!m) ? null : \"(\" + m[1] + \") \" + m[2] + \"-\" + m[3]+ \"x\" + m[4];\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("//<!--This script is based on the javascript code of Roman Feldblum (web.developer@programmer.net)-->\n");
      out.write("//<!-- Original script : http://javascript.internet.com/forms/format-phone-number.html -->\n");
      out.write("//<!-- Original script is revised by Eralper Yilmaz (http://www.eralper.com) -->\n");
      out.write("//<!-- Revised script : http://www.kodyaz.com/content/HowToAutoFormatTelephoneNumber.aspx -->\n");
      out.write("\n");
      out.write("var zChar = new Array(' ', '(', ')', '-', '.');\n");
      out.write("var maxphonelength = 13;\n");
      out.write("var phonevalue1;\n");
      out.write("var phonevalue2;\n");
      out.write("var cursorposition;\n");
      out.write("\n");
      out.write("function ParseForNumber1(object){\n");
      out.write("\tphonevalue1 = ParseChar(object.value, zChar);\n");
      out.write("}\n");
      out.write("function ParseForNumber2(object){\n");
      out.write("\tphonevalue2 = ParseChar(object.value, zChar);\n");
      out.write("}\n");
      out.write("\n");
      out.write("function backspacerUP(object,e) { \n");
      out.write("\tif(e){ \n");
      out.write("\t\te = e \n");
      out.write("\t} else {\n");
      out.write("\t\te = window.event \n");
      out.write("\t} \n");
      out.write("\tif(e.which){ \n");
      out.write("\t\tvar keycode = e.which \n");
      out.write("\t} else {\n");
      out.write("\t\tvar keycode = e.keyCode \n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\tParseForNumber1(object)\n");
      out.write("\n");
      out.write("\tif(keycode >= 48){\n");
      out.write("\t\tValidatePhone(object)\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("function backspacerDOWN(object,e) { \n");
      out.write("\tif(e){ \n");
      out.write("\t\te = e \n");
      out.write("\t} else {\n");
      out.write("\t\te = window.event \n");
      out.write("\t} \n");
      out.write("\tif(e.which){ \n");
      out.write("\t\tvar keycode = e.which \n");
      out.write("\t} else {\n");
      out.write("\t\tvar keycode = e.keyCode \n");
      out.write("\t}\n");
      out.write("\tParseForNumber2(object)\n");
      out.write("} \n");
      out.write("\n");
      out.write("function GetCursorPosition(){\n");
      out.write("    \n");
      out.write("\tvar t1 = phonevalue1;\n");
      out.write("\tvar t2 = phonevalue2;\n");
      out.write("\tvar bool = false\n");
      out.write("    for (i=0; i<t1.length; i++)\n");
      out.write("    {\n");
      out.write("    \tif (t1.substring(i,1) != t2.substring(i,1)) {\n");
      out.write("    \t\tif(!bool) {\n");
      out.write("    \t\t\tcursorposition=i\n");
      out.write("    \t\t\tbool=true\n");
      out.write("    \t\t}\n");
      out.write("    \t}\n");
      out.write("    }\n");
      out.write("}\n");
      out.write("\n");
      out.write("function ValidatePhone(object){\n");
      out.write("\t\n");
      out.write("\tvar p = phonevalue1\n");
      out.write("\t\n");
      out.write("\tp = p.replace(/[^\\d]*/gi,\"\")\n");
      out.write("\n");
      out.write("\tif (p.length < 3) {\n");
      out.write("\t\tobject.value=p\n");
      out.write("\t} else if(p.length==3){\n");
      out.write("\t\tpp=p;\n");
      out.write("\t\td4=p.indexOf('(')\n");
      out.write("\t\td5=p.indexOf(')')\n");
      out.write("\t\tif(d4==-1){\n");
      out.write("\t\t\tpp=\"(\"+pp;\n");
      out.write("\t\t}\n");
      out.write("\t\tif(d5==-1){\n");
      out.write("\t\t\tpp=pp+\")\";\n");
      out.write("\t\t}\n");
      out.write("\t\tobject.value = pp;\n");
      out.write("\t} else if(p.length>3 && p.length < 7){\n");
      out.write("\t\tp =\"(\" + p;\t\n");
      out.write("\t\tl30=p.length;\n");
      out.write("\t\tp30=p.substring(0,4);\n");
      out.write("\t\tp30=p30+\")\"\n");
      out.write("\n");
      out.write("\t\tp31=p.substring(4,l30);\n");
      out.write("\t\tpp=p30+p31;\n");
      out.write("\n");
      out.write("\t\tobject.value = pp;\t\n");
      out.write("\t\t\n");
      out.write("\t} else if(p.length >= 7){\n");
      out.write("\t\tp =\"(\" + p;\t\n");
      out.write("\t\tl30=p.length;\n");
      out.write("\t\tp30=p.substring(0,4);\n");
      out.write("\t\tp30=p30+\")\"\n");
      out.write("\t\t\n");
      out.write("\t\tp31=p.substring(4,l30);\n");
      out.write("\t\tpp=p30+p31;\n");
      out.write("\t\t\n");
      out.write("\t\tl40 = pp.length;\n");
      out.write("\t\tp40 = pp.substring(0,8);\n");
      out.write("\t\tp40 = p40 + \"-\"\n");
      out.write("\t\t\n");
      out.write("\t\tp41 = pp.substring(8,l40);\n");
      out.write("\t\tppp = p40 + p41;\n");
      out.write("\t\t\n");
      out.write("\t\tobject.value = ppp.substring(0, maxphonelength);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tGetCursorPosition()\n");
      out.write("\t\n");
      out.write("\tif(cursorposition >= 0){\n");
      out.write("\t\tif (cursorposition == 0) {\n");
      out.write("\t\t\tcursorposition = 2\n");
      out.write("\t\t} else if (cursorposition <= 2) {\n");
      out.write("\t\t\tcursorposition = cursorposition + 1\n");
      out.write("\t\t} else if (cursorposition <= 5) {\n");
      out.write("\t\t\tcursorposition = cursorposition + 2\n");
      out.write("\t\t} else if (cursorposition == 6) {\n");
      out.write("\t\t\tcursorposition = cursorposition + 2\n");
      out.write("\t\t} else if (cursorposition == 7) {\n");
      out.write("\t\t\tcursorposition = cursorposition + 4\n");
      out.write("\t\t\te1=object.value.indexOf(')')\n");
      out.write("\t\t\te2=object.value.indexOf('-')\n");
      out.write("\t\t\tif (e1>-1 && e2>-1){\n");
      out.write("\t\t\t\tif (e2-e1 == 4) {\n");
      out.write("\t\t\t\t\tcursorposition = cursorposition - 1\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t} else if (cursorposition < 11) {\n");
      out.write("\t\t\tcursorposition = cursorposition + 3\n");
      out.write("\t\t} else if (cursorposition == 11) {\n");
      out.write("\t\t\tcursorposition = cursorposition + 1\n");
      out.write("\t\t} else if (cursorposition >= 12) {\n");
      out.write("\t\t\tcursorposition = cursorposition\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("        var txtRange = object.createTextRange();\n");
      out.write("        txtRange.moveStart( \"character\", cursorposition);\n");
      out.write("\t\ttxtRange.moveEnd( \"character\", cursorposition - object.value.length);\n");
      out.write("        txtRange.select();\n");
      out.write("    }\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("function ParseChar(sStr, sChar)\n");
      out.write("{\n");
      out.write("    if (sChar.length == null) \n");
      out.write("    {\n");
      out.write("        zChar = new Array(sChar);\n");
      out.write("    }\n");
      out.write("    else zChar = sChar;\n");
      out.write("    \n");
      out.write("    for (i=0; i<zChar.length; i++)\n");
      out.write("    {\n");
      out.write("        sNewStr = \"\";\n");
      out.write("    \n");
      out.write("        var iStart = 0;\n");
      out.write("        var iEnd = sStr.indexOf(sChar[i]);\n");
      out.write("    \n");
      out.write("        while (iEnd != -1)\n");
      out.write("        {\n");
      out.write("            sNewStr += sStr.substring(iStart, iEnd);\n");
      out.write("            iStart = iEnd + 1;\n");
      out.write("            iEnd = sStr.indexOf(sChar[i], iStart);\n");
      out.write("        }\n");
      out.write("        sNewStr += sStr.substring(sStr.lastIndexOf(sChar[i]) + 1, sStr.length);\n");
      out.write("        \n");
      out.write("        sStr = sNewStr;\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    return sNewStr;\n");
      out.write("}\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t</script>\n");
      out.write("\t\n");
      out.write("\t</div>\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
